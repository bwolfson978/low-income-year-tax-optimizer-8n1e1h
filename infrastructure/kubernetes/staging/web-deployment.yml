apiVersion: apps/v1
kind: Deployment
metadata:
  name: tax-optimizer-web
  namespace: staging
  labels:
    app: tax-optimizer
    component: web
    environment: staging
  annotations:
    kubernetes.io/change-cause: "Initial staging deployment"
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"

spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  
  selector:
    matchLabels:
      app: tax-optimizer
      component: web
      environment: staging
  
  template:
    metadata:
      labels:
        app: tax-optimizer
        component: web
        environment: staging
    
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      
      containers:
      - name: web
        image: tax-optimizer-web:staging
        imagePullPolicy: Always
        
        ports:
        - containerPort: 3000
          protocol: TCP
          name: http
        
        resources:
          requests:
            cpu: "50m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
        
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        env:
        - name: NODE_ENV
          value: "staging"
        - name: NEXT_PUBLIC_API_URL
          value: "https://staging.tax-optimizer.example.com/api"
        - name: NEXT_PUBLIC_ENVIRONMENT
          value: "staging"
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: next-cache
          mountPath: /app/.next/cache
      
      volumes:
      - name: tmp
        emptyDir: {}
      - name: next-cache
        emptyDir: {}
      
      terminationGracePeriodSeconds: 30
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - tax-optimizer
              topologyKey: kubernetes.io/hostname