apiVersion: apps/v1
kind: Deployment
metadata:
  name: tax-optimizer-backend
  namespace: staging
  labels:
    app: tax-optimizer
    component: backend
    environment: staging
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"
    deployment.kubernetes.io/revision: "1"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: tax-optimizer
      component: backend
  template:
    metadata:
      labels:
        app: tax-optimizer
        component: backend
        environment: staging
    spec:
      containers:
      - name: backend
        image: tax-optimizer-backend:staging
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        env:
        - name: NODE_ENV
          value: staging
        - name: PORT
          value: "3000"
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000