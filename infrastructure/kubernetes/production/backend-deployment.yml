apiVersion: apps/v1
kind: Deployment
metadata:
  name: tax-optimizer-backend
  namespace: production
  labels:
    app: tax-optimizer
    component: backend
    environment: production
  annotations:
    kubernetes.io/change-cause: "Initial production deployment"
    deployment.kubernetes.io/revision: "1"

spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  selector:
    matchLabels:
      app: tax-optimizer
      component: backend

  template:
    metadata:
      labels:
        app: tax-optimizer
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
        checksum/config: "${CONFIG_CHECKSUM}"
        checksum/secrets: "${SECRETS_CHECKSUM}"

    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - tax-optimizer
              topologyKey: kubernetes.io/hostname

      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault

      containers:
      - name: backend
        image: tax-optimizer-backend:${VERSION}
        imagePullPolicy: Always
        
        ports:
        - containerPort: 3000
          name: http

        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2

        startupProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 30

        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: config
          mountPath: /app/config
          readOnly: true

        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"

        envFrom:
        - secretRef:
            name: backend-secrets
        - configMapRef:
            name: backend-config

      volumes:
      - name: tmp
        emptyDir: {}
      - name: config
        configMap:
          name: backend-config